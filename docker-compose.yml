services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        UID: 1000
        GID: 1000
    container_name: convenia_app
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./:/var/www/html:delegated
      - ./vendor:/var/www/html/vendor
      - ./node_modules:/var/www/html/node_modules
    environment:
      APP_ENV: local
      APP_DEBUG: "true"
      DB_HOST: db
      DB_PORT: 3306
      DB_DATABASE: convenia
      DB_USERNAME: convenia
      DB_PASSWORD: secret
      CACHE_DRIVER: redis
      QUEUE_CONNECTION: redis
      REDIS_HOST: redis
    depends_on:
      - db
      - redis
    networks:
      - appnet

  nginx:
    image: nginx:stable-alpine
    container_name: convenia_nginx
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./:/var/www/html:ro
      - ./.docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - app
    networks:
      - appnet

  db:
    image: mysql:8.0
    container_name: convenia_db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: rootsecret
      MYSQL_DATABASE: convenia
      MYSQL_USER: convenia
      MYSQL_PASSWORD: secret
    volumes:
      - db_data:/var/lib/mysql
    ports:
      - "3307:3306"
    networks:
      - appnet

  redis:
    image: redis:7
    container_name: convenia_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - appnet
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: convenia_phpmyadmin
    restart: unless-stopped
    environment:
      PMA_HOST: db
      PMA_PORT: 3306
      PMA_USER: convenia
      PMA_PASSWORD: secret
      UPLOAD_LIMIT: 100M
    ports:
      - "8080:80"
    depends_on:
      - db
    networks:
      - appnet

  worker:
    build: .
    container_name: convenia_worker
    command: php artisan queue:work redis --queue=default --sleep=1 --tries=3 --timeout=30
    depends_on:
      - redis
      - db
    networks:
      - appnet
    volumes:
      - .:/var/www/html
      
  mailhog:
    image: mailhog/mailhog:latest
    ports:
      - "1025:1025" # SMTP port
      - "8025:8025" # MailHog web UI port
    networks:
      - appnet

volumes:
  db_data:
  vendor:


networks:
  appnet:
    driver: bridge
